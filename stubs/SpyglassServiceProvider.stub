<?php

namespace App\Providers;

use Illuminate\Support\Facades\Gate;
use LaracraftTech\LaravelSpyglass\IncomingEntry;
use LaracraftTech\LaravelSpyglass\Spyglass;
use LaracraftTech\LaravelSpyglass\SpyglassApplicationServiceProvider;

class SpyglassServiceProvider extends SpyglassApplicationServiceProvider
{
    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        // Spyglass::night();

        $this->hideSensitiveRequestDetails();

        Spyglass::filter(function (IncomingEntry $entry) {
            if ($this->app->environment('local')) {
                return true;
            }

            return $entry->isSlow() ||
                   $entry->hasMonitoredTag();
        });
    }

    /**
     * Prevent sensitive request details from being logged by Spyglass.
     *
     * @return void
     */
    protected function hideSensitiveRequestDetails()
    {
        if ($this->app->environment('local')) {
            return;
        }

        Spyglass::hideRequestParameters(['_token']);

        Spyglass::hideRequestHeaders([
            'cookie',
            'x-csrf-token',
            'x-xsrf-token',
        ]);
    }

    /**
     * Register the Spyglass gate.
     *
     * This gate determines who can access Spyglass in non-local environments.
     *
     * @return void
     */
    protected function gate()
    {
        Gate::define('viewSpyglass', function ($user) {
            return in_array($user->email, [
                //
            ]);
        });
    }
}
